<template>
  <section id="driveTimeChartComents">
      <div id="driveTimeChart"></div>
      <!-- 四边小角 -->
      <div class="left-top"></div>
      <div class="right-top"></div>
      <div class="let-bottom"></div>
      <div class="right-bottom"></div>
  </section>
</template>
<script>
  export default {
    name: '',
    data (){
      return {
      }
    },
    computed:{
      timeState(){
        return this.$store.getters.timeState;
      }
    },
    mounted(){
      let _this=this;
      _this.$nextTick(function(){
        _this.drawLine(3);
      })
    },
    methods: {
      drawLine(timeState) {
        let chartTime='',chartData='';
        switch (+timeState) {
          //年
          case 1:{
            chartTime = ['1','2','3','4','5','6','7','8','9','10','11','12'];
            chartData = [120, 132, 101, 134, 90, 23, 50, 40,100,20 ,40,90];
            this.chartInit(chartTime,chartData,'月');
            break;
          }
          //月
          case 2:{
            let _d = new Date();
            let year = _d.getFullYear(),month = _d.getMonth() +1;
            let daycount = new Date(year,month,0).getDate();            //判断当月天数
            switch (+daycount) {
              case 28:{
                chartTime = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28'];
                chartData = [120, 132, 101, 134, 90, 23, 50,40,100,20,40,90,50,40,30,20,10,40,15,65,89,65,150,64,80,79,120,65];
                break
              }
              case 29:{
                chartTime = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29'];
                chartData = [120, 132, 101, 134, 90, 23, 50,40,100,20,40,90,50,40,30,20,10,40,15,65,89,65,100,64,80,79,120,65,88];
                break
              }
              case 30:{
                chartTime = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30'];
                chartData = [120, 132, 101, 134, 90, 23, 50,40,100,20,40,90,50,40,30,20,10,40,15,65,89,65,100,10,80,79,120,65,88,30];
                break
              }
              case 31:{
                chartTime = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31'];
                chartData = [120, 132, 101, 134, 90, 23, 50,40,100,20,40,90,50,40,30,20,10,40,15,65,89,65,100,10,50,79,120,65,88,30,87];
                break
              }
            }
            this.chartInit(chartTime,chartData,'号');
            break;
          }
          //日
          case 3:{
            chartTime = ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23'];
            chartData = [120, 132, 101, 134, 90, 23, 50,40,100,20,40,90,50,40,30,20,10,40,110,40,67,88,91,50,];
            this.chartInit(chartTime,chartData,'点');
            break;
          }
        }
      },
      chartInit(chartTime,chartData,timeCompany){
        let _this=this;
        // 基于准备好的dom，初始化echarts实例
        let chartDiv = document.querySelector("#driveTimeChart");
        //自适应宽高
        let myChartContainer = function () {
          chartDiv.style.width = $("#driveTimeChartComents").width() +'px';
          chartDiv.style.height = $("#driveTimeChartComents").height() +'px';
        };
        myChartContainer();
        let driveTimeChart = _this.$echarts.init(chartDiv);
        driveTimeChart.setOption({
         grid: {
           left: '3%',
           right: '4%',
           bottom: '3%',
           containLabel: true,
         },
         toolbox: {
           show : false
         },
         tooltip : {
           trigger: 'axis',
           axisPointer: {
             type: 'cross',
             label: {
               backgroundColor: '#6a7985'
             }
           },
           formatter: function (params, ticket, callback) {
             return '<div style="padding: 6px">' +
               '<p>&nbsp;&nbsp;&nbsp;时间：&nbsp;' +params[0].name+timeCompany+'</p>' +
               '<p><span style="background: #c23513;width: 10px;height: 10px;border-radius: 50%;display: inline-block"></span> ' +
               '<span> 行车速度：'+params[0].value+'km/h</p>' +
               '</div>';
           }
         },
         legend: {
           data:['行车时间'],
           textStyle:{
             color:'#fff'
           }
         },
         xAxis : [
           {
             show:false,
             type : 'category',
             boundaryGap : false,
             data: chartTime,
             axisLabel: {
               textStyle: {
                 color: '#FFFFFF'
               }
             },
             axisLine: {
               lineStyle: {
                 color: '#FFFFFF'
               }
             }
           }
         ],
         yAxis : [
           {
             type : 'value',
             axisLabel: {
               textStyle: {
                 color: '#FFFFFF'
               }
             },
             axisLine: {
               lineStyle: {
                 color: '#FFFFFF'
               }
             }
           }
         ],
         series : [
           {
             name:'行车时间',
             type:'line',
             stack: '总量',
             areaStyle: {normal: {}},
             data:chartData
           },
         ]
       });
        //浏览器大小改变时重置大小
        window.addEventListener("resize", function () {
          myChartContainer();
          driveTimeChart.resize();
        });
      }
    },
    watch:{
      timeState:function (newVal, oldVal) {
        this.drawLine(newVal);
      }
    },
  }
</script>


